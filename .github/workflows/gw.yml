# GET Int VALUE
CREATE TEMP FUNCTION int_value(data ANY TYPE, column STRING) AS (
  (SELECT value.int_value FROM unnest(data) WHERE key = column)
);
# GET String VALUE
CREATE TEMP FUNCTION string_value(data ANY TYPE, column STRING) AS (
  (SELECT value.string_value FROM unnest(data) WHERE key = column)
);
# GET Timestamp VALUE
CREATE TEMP FUNCTION timestamp_value(data ANY TYPE, column STRING) AS (
  TIMESTAMP((SELECT value.string_value FROM unnest(data) WHERE key = column), "Asia/Seoul")
);
# AES256 decrypt
CREATE TEMP FUNCTION aes_decrypt(base64_text STRING, key STRING) RETURNS STRING LANGUAGE js AS
"""return decrypt(base64_text, key)""" OPTIONS ( library="gs://socar-bq-udf/crypt.js" );

# temporal decrypt function
CREATE TEMP FUNCTION decrypt_location(encrypted STRING) AS (
  CAST(aes_decrypt(encrypted, 'c2595a5a2d181ae13c227fc2e2980d4d') AS FLOAT64)
);


#TEMPFUNCTION END



with reservation_raw as (select ri.id, ri.car_id, ri.zone_id, ri.way, ri.start_at, ri.end_at, ri.age, ri.distance, ri.onboard_at, ri.return_at from `socar-data.extend_view.reservation_info`
where (ri.distance > 200
and date(ri.start_at, "Asia/Seoul") >= "2019-12-31")
and date(ri.start_at, "Asia/Seoul") < "2020-01-01")


, connect_raw as (SELECT 
t1.id, t1.car_id, t1.engine, t1.gps_valid, t1.created_at, decrypt_location(t1.lat_enc) as lat, decrypt_location(t1.lng_enc) as lng,  
t2.id as r_id, t2.zone_id, t2.way, t2.start_at, t2.end_at, t2.age, t2.onboard_at, t2.return_at FROM `socar-data.log_replica.connect_info` as t1 left join reservation_raw as t2 on t1.car_id = t2.car_id 

and t1.created_at between t2.onboard_at and t2.return_at

WHERE DATE(created_at) >= "2019-12-31" 
AND DATE(created_at) < "2020-01-01" 

order by t1.car_id)

select *
FROM connect_raw 
where zone_id is not null
  # boundary_gangwon
  
  AND lat > 37.018205
  AND lat < 38.642618
  AND lng > 127.080231
  AND lng < 129.371910
  
  
